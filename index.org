#+title: Deep FTR Option Pricing
#+author: Matt Brigida, Ph.D.
#+PROPERTY: header-args :eval yes
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
#+HTML_HEAD: <style>pre.src{background:#343131;color:white;} </style>


#+begin_comment
[[https://arxiv.org/pdf/1809.02233.pdf][Here is the paper.]]

[[https://developer.nvidia.com/blog/accelerating-python-for-exotic-option-pricing/][Here is the NVIDIA blog article.]]
#+end_comment


* Generate Training Data via Monte Carlo


** Monte Carlo Assumptions

We will assume electricity prices are generated by the following stochastic differential equation:

$$dE_t = \kappa(\mu-E_t) d_t + \sigma E_t dB_t$$

We allow for correlations between electricity prices.

#+caption: Parameters generated for the Monte Carlo simulation.
|----------------------------+--------+--------------------|
| Parameter                  | Number | Distribution       |
|----------------------------+--------+--------------------|
| Forward Electricity Prices |      2 | Simulated          |
| Volatility                 |      2 | Uniform(0.01, 1)   |
| Correlation                |      1 |                    |
| Maturity                   |      1 |                    |
| risk-free                  |      1 | Uniform(0.01, 0.1) |
|----------------------------+--------+--------------------|



** Monte Carlo Code

We'll use Numba to run the Monte Carlo in parallel on a GPU.

#+begin_src python :session *mc* :exports none :results none
import numpy as np
from numba import cuda
#+end_src


#+begin_src python :session *mc* :exports none :results none
cuda.jit

#+end_src



* Train Neural Network on Generated Data



* Validate Against FTR Auction Results


FTR price data is from here: https://www.pjm.com/-/media/markets-ops/ftr/annual-ftr-auction/2023-2024/2023-2024-annual-auction-round-4-results.ashx

#+begin_src python :session *py* :exports code :results nil
import pandas as pd
option_data = pd.read_csv("./csvs/option_data.csv")
lmp_data = pd.read_csv("./csvs/lmp_data.csv")
option_path_data = pd.read_csv("./csvs/option_path_data.csv")
#+end_src

#+RESULTS:


#+begin_src python :session *py* :exports code :results nil
#+end_src

#+RESULTS:
: 0                            1.448716e+03
: Source PNODEID               4.766272e+08
: Sink PNODEID                 2.611426e+08
: Option MCP_24H               1.665083e+04
: Option MCP_On Peak           1.045194e+04
: Option MCP_Off Peak          6.432980e+03
: Option MCP_Wknd On Peak      3.174125e+03
: Option MCP_Daily Off Peak    3.419757e+03
: dtype: float64
